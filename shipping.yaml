- name : shipping module
  hosts : shipping
  become : yes
  vars:
    mysql_password : RoboShop@1
  tasks: 
    - name: Install maven
      ansible.builtin.package:
        name: maven
        state: present

    - name : creating user roboshop
      ansible.builtin.user:
        name : roboshop

    - name : recursively remove app directory if its present
      ansible.builtin.file:
        path : /app
        state : absent

    - name : creating app directory
      ansible.builtin.file:
        path : /app
        state: directory

    - name : downloading the application code for shipping
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name : unzipping/extract the shipping zip file
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip 
        dest: /app
        remote_src: yes

    - name : cleaning the package
      ansible.builtin.command:  mvn clean package
      args :
        chdir : /app
      # register: mvn_result

    # - name: Debug Maven Result
    #   ansible.builtin.debug:
    #     var: mvn_result

    - name : rename the name 
      ansible.builtin.command: mv /app/target/shipping-1.0.jar /app/shipping.jar
      args :
        chdir : /app


    - name: copying the shipping service file
      ansible.builtin.copy:
        src : shipping.service
        dest: /etc/systemd/system/shipping.service

    - name : deamon reload and start
      ansible.builtin.systemd_service:
        name : shipping
        state: started
        enabled : yes
        daemon_reload: true

    - name : installing mysql client
      ansible.builtin.package:
        name: mysql
        state: present


    # - name : get the cities count present in city.service file
    #   ansible.builtin.command:  mysql -h mysql.arundev.online --quiet --eval 'db = db.getSiblingDB("cities"); db.cities.count()'
    #   register : city_count  



    - name : check the cities count present in shipping 
      ansible.builtin.command:  mysql -h mysql.arundev.online -uroot -p{{mysql_password}} -SN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='cities'"
      register : schema


    # - name : print output
    #   ansible.builtin.debug:
    #     msg : "cities list is : {{schema}}"

    - name : loading the cities data
      ansible.builtin.shell: "mysql -h mysql.arundev.online -uroot -p{{mysql_password}} < /app/schema/shipping.sql"
      when : schema.stdout != "1"

    - name : start an enable shipping 
      ansible.builtin.service:
        name : shipping
        state: restarted
        enabled : yes

    